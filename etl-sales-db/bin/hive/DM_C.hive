USE etl_sales_db;
set mapred.min.split.size=536870912;

DROP VIEW custv;
CREATE VIEW custv AS
SELECT  /*+ MAPJOIN(househould_demographics), MAPJOIN(d1), MAPJOIN(d2), MAPJOIN(customer_demograhpics) */
        cust_customer_id
        ,cd_demo_sk cust_cdemo_sk
        ,hd_demo_sk cust_hdemo_sk
        ,d1.d_date_sk cust_first_shipto_date_sk
        ,d2.d_date_sk cust_first_sales_date_sk
        ,cust_salutation
        ,cust_first_name
        ,cust_last_name
        ,cust_preffered_flag
        ,cust_birth_date
        ,cust_birth_country
        ,cust_login_id
        ,cust_email_address
        ,cust_last_review_date
FROM    s_customer s
LEFT OUTER JOIN customer_demographics cd ON (
        s.cust_marital_status = cd.cd_marital_status
        and s.cust_educ_status = cd.cd_education_status
	and s.cust_purch_est = cd.cd_purchase_estimate
        and s.cust_credit_rating = cd.cd_credit_rating
        and s.cust_depend_cnt = cd.cd_dep_count
        and s.cust_depend_emp_cnt = cd.cd_dep_employed_count
        and s.cust_depend_college_cnt = cd.cd_dep_college_count
	and s.cust_gender = cd.cd_gender)
LEFT OUTER JOIN household_demographics hd ON (
        s.cust_buy_potential = hd.hd_buy_potential
        and s.cust_depend_cnt= hd.hd_dep_count
        and s.cust_vehicle_cnt = hd.hd_vehicle_count)
LEFT OUTER JOIN date_dim d1 ON (d1.d_date = s.cust_first_purchase_date)
LEFT OUTER JOIN date_dim d2 ON (d2.d_date = s.cust_first_shipto_date);


DROP VIEW custv2;
CREATE VIEW custv2 AS
SELECT /*+ STREAMTABLE(customer) */
       *
FROM customer
LEFT OUTER JOIN custv ON (customer.c_customer_id=custv.cust_customer_id);


CREATE TABLE IF NOT EXISTS customer_update_tmp LIKE customer;
ALTER TABLE customer_update_tmp SET TBLPROPERTIES ('serialization.null.format'='');

FROM custv2
INSERT OVERWRITE TABLE customer
SELECT `c_.*`
WHERE (cust_customer_id IS NULL)
INSERT OVERWRITE TABLE customer_update_tmp
SELECT c_customer_sk
        ,cust_customer_id c_customer_id
        ,cust_cdemo_sk c_current_cdemo_sk
        ,cust_hdemo_sk c_current_hdemo_sk
        ,c_current_addr_sk
        ,cust_first_shipto_date_sk c_first_shipto_date_sk
        ,cust_first_sales_date_sk c_first_sales_date_sk
        ,cust_salutation c_salutation
        ,cust_first_name c_first_name
        ,cust_last_name c_last_name
        ,cust_preffered_flag c_preferred_cust_flag
        ,day(cust_birth_date) c_birth_day
        ,month(cust_birth_date) c_birth_month
        ,year(cust_birth_date) c_birth_year
        ,cust_birth_country c_birth_country
        ,cust_login_id c_login
        ,cust_email_address c_email_address
        ,cust_last_review_date c_last_review_date
WHERE (cust_customer_id IS NOT NULL);

LOAD DATA INPATH 'warehouse/etl_sales_db.db/customer_update_tmp' INTO TABLE customer;

DROP TABLE IF EXISTS customer_update_tmp;
