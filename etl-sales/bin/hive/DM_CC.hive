USE tpcds_etl;

DROP VIEW ccv;
CREATE VIEW ccv AS
SELECT /*+ MAPJOIN(d1), MAPJOIN(d2) */
       call_center_id
       ,d1.d_date_sk call_open_date_sk
       ,d2.d_date_sk call_closed_date_sk
       ,call_center_name
       ,call_center_class
       ,call_center_employees
       ,call_center_sq_ft
       ,call_center_hours
       ,call_center_manager
       ,call_center_tax_percentage
FROM s_call_center
LEFT OUTER JOIN date_dim d1 ON(s_call_center.call_open_date = d1.d_date)
LEFT OUTER JOIN date_dim d2 ON(s_call_center.call_closed_date = d2.d_date);

DROP VIEW ccv2;
CREATE VIEW ccv2 AS
SELECT /*+ STREAMTABLE(call_center) */ *
FROM call_center
LEFT OUTER JOIN ccv ON(call_center.cc_call_center_id = ccv.call_center_id);

CREATE TABLE IF NOT EXISTS call_center_update_tmp LIKE call_center;
ALTER TABLE call_center_update_tmp SET TBLPROPERTIES ('serialization.null.format'='');

CREATE TABLE IF NOT EXISTS call_center_new_tmp LIKE call_center;
ALTER TABLE call_center_new_tmp SET TBLPROPERTIES ('serialization.null.format'='');

FROM ccv2
INSERT OVERWRITE TABLE call_center
SELECT cc_call_center_sk
       ,cc_call_center_id
       ,cc_rec_start_date
       ,cc_rec_end_date
       ,cc_closed_date_sk
       ,cc_open_date_sk
       ,cc_name
       ,cc_class
       ,cc_employees
       ,cc_sq_ft
       ,cc_hours
       ,cc_manager
       ,cc_mkt_id
       ,cc_mkt_class
       ,cc_mkt_desc
       ,cc_market_manager
       ,cc_division
       ,cc_division_name
       ,cc_company
       ,cc_company_name
       ,cc_street_number
       ,cc_street_name
       ,cc_street_type
       ,cc_suite_number
       ,cc_city
       ,cc_county
       ,cc_state
       ,cc_zip
       ,cc_country
       ,cc_gmt_offset
       ,cc_tax_percentage
WHERE (call_center_id IS NULL OR cc_rec_end_date IS NOT NULL)
INSERT OVERWRITE TABLE call_center_update_tmp
SELECT cc_call_center_sk
       ,cc_call_center_id
       ,cc_rec_start_date
       ,date_sub(to_date(from_unixtime(unix_timestamp())), 1) cc_rec_end_date
       ,cc_closed_date_sk
       ,cc_open_date_sk
       ,cc_name
       ,cc_class
       ,cc_employees
       ,cc_sq_ft
       ,cc_hours
       ,cc_manager
       ,cc_mkt_id
       ,cc_mkt_class
       ,cc_mkt_desc
       ,cc_market_manager
       ,cc_division
       ,cc_division_name
       ,cc_company
       ,cc_company_name
       ,cc_street_number
       ,cc_street_name
       ,cc_street_type
       ,cc_suite_number
       ,cc_city
       ,cc_county
       ,cc_state
       ,cc_zip
       ,cc_country
       ,cc_gmt_offset
       ,cc_tax_percentage
WHERE (call_center_id IS NOT NULL AND cc_rec_end_date IS NULL)
INSERT OVERWRITE TABLE call_center_new_tmp
SELECT cc_call_center_sk
       ,call_center_id cc_call_center_id
       ,to_date(from_unixtime(unix_timestamp())) cc_rec_start_date
       ,to_date(NULL) cc_rec_end_date
       ,call_closed_date_sk cc_closed_date_sk
       ,call_open_date_sk cc_open_date_sk
       ,call_center_name cc_name
       ,call_center_class cc_class
       ,call_center_employees cc_employees
       ,call_center_sq_ft cc_sq_ft
       ,call_center_hours cc_hours
       ,call_center_manager cc_manager
       ,cc_mkt_id
       ,cc_mkt_class
       ,cc_mkt_desc
       ,cc_market_manager
       ,cc_division
       ,cc_division_name
       ,cc_company
       ,cc_company_name
       ,cc_street_number
       ,cc_street_name
       ,cc_street_type
       ,cc_suite_number
       ,cc_city
       ,cc_county
       ,cc_state
       ,cc_zip
       ,cc_country
       ,cc_gmt_offset
       ,call_center_tax_percentage cc_tax_percentage
WHERE (call_center_id IS NOT NULL AND cc_rec_end_date IS NULL);

LOAD DATA INPATH 'warehouse/tpcds_etl.db/call_center_update_tmp' INTO TABLE call_center;
LOAD DATA INPATH 'warehouse/tpcds_etl.db/call_center_new_tmp' INTO TABLE call_center;

DROP TABLE IF EXISTS call_center_update_tmp;
DROP TABLE IF EXISTS call_center_new_tmp;
