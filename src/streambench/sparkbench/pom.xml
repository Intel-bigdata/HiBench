<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.intel.hibench</groupId>
    <artifactId>streambench</artifactId>
    <version>5.0-SNAPSHOT</version>
  </parent>

  <groupId>com.intel.hibench.streambench</groupId>
  <artifactId>streaming-bench-spark_0.1</artifactId>
  <packaging>jar</packaging>
  <name>Streaming Benchmark Spark</name>

  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-graphx_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-kafka-0-8-assembly_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-flume_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
    </dependency>
   <!--
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-zeromq_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
    </dependency>
  
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-mqtt_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
   -->
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>0.94.6</version>
      <exclusions>
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.netty</groupId>
          <artifactId>netty</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.11</artifactId>
      <version>0.8.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.binary.version}</artifactId>
      <scope>test</scope>
      <version>${scalatest.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scalacheck</groupId>
      <artifactId>scalacheck_${scala.binary.version}</artifactId>
      <scope>test</scope>
      <version>${scalacheck.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cassandra</groupId>
      <artifactId>cassandra-all</artifactId>
      <version>1.2.6</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.googlecode.concurrentlinkedhashmap</groupId>
          <artifactId>concurrentlinkedhashmap-lru</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.ning</groupId>
          <artifactId>compress-lzf</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>jline</groupId>
          <artifactId>jline</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.cassandra.deps</groupId>
          <artifactId>avro</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.sonatype.sisu.inject</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.xerial.snappy</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <outputDirectory>target/scala-${scala.binary.version}/classes</outputDirectory>
    <testOutputDirectory>target/scala-${scala.binary.version}/test-classes</testOutputDirectory>
    <plugins>
      <plugin>
	<groupId>net.alchim31.maven</groupId>
	<artifactId>scala-maven-plugin</artifactId>
	<configuration>
	  <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
	  <scalaVersion>${scala.version}</scalaVersion>
	</configuration>
	<executions>
	  <execution>
	    <id>scala-compile-first</id>
	    <phase>process-resources</phase>
	    <goals>
	      <goal>add-source</goal>
	      <goal>compile</goal>
	    </goals>
	  </execution>
	  <execution>
	    <id>scala-test-compile</id>
	    <phase>process-test-resources</phase>
	    <goals>
	      <goal>testCompile</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
       <plugin>
	 <groupId>org.codehaus.mojo</groupId>
	 <artifactId>build-helper-maven-plugin</artifactId>
	 <version>${build-helper-maven-plugin.version}</version>
	 <executions>
	   <execution>
	     <id>add-source</id>
	     <phase>generate-sources</phase>
	     <goals>
	       <goal>add-source</goal>
	     </goals>
	     <configuration>
	       <sources>
		 <source>src/multiapi/scala/spark${spark.bin.version}/</source>
	       </sources>
	     </configuration>
	   </execution>
	 </executions>
       </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
	<version>${maven-assembly-plugin.version}</version>
	<configuration>
	  <finalName>${project.build.finalName}-spark${spark.bin.version}</finalName>
	  <descriptorRefs>
	    <descriptorRef>jar-with-dependencies</descriptorRef>
	  </descriptorRefs>
	</configuration>
	<executions>
	  <execution>
	    <id>make-assembly</id>
	    <phase>package</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>
